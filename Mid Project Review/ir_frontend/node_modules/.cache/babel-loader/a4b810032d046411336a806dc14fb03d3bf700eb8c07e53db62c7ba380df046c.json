{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srija\\\\Desktop\\\\ir_project\\\\ir-frontend\\\\src\\\\components\\\\ImageList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ImageCard from '../components/ImageCard';\nimport { Row, Col } from 'reactstrap';\nimport axios from 'axios';\nimport { ImageContext } from './ImageModal';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageList(_ref) {\n  _s();\n  let {\n    image\n  } = _ref;\n  const getImages = async image => {\n    const params = {\n      path: \"C:\\\\Users\\\\srija\\\\Desktop\\\\\" + image\n    };\n    let images;\n    if (image == null) {\n      await axios.get('http://127.0.0.1:5000/shuffle').then(response => {\n        console.log('Data received:', response.data);\n        setImages(response.data.images);\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n      });\n    }\n  };\n  const [images, setImages] = useState([]);\n\n  // this.getImages()\n  // console.log(\"hi\",this.state.images)\n  // var image=this.state.image\n  images = images.slice(0, 100);\n  let chunk_images = [];\n  let chunkSize = 8;\n  for (let i = 0; i < ((_images = images) === null || _images === void 0 ? void 0 : _images.length); i += chunkSize) {\n    var _images;\n    const chunk = images.slice(i, i + chunkSize);\n    chunk_images.push(chunk);\n  }\n  console.log(chunk_images);\n  useEffect(() => {\n    getImages(image);\n  }, [image]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chunk_images.map((chunk_image, index1) => /*#__PURE__*/_jsxDEV(Row, {\n      xs: \"8\",\n      style: {\n        \"padding\": \"0% 0%\",\n        \"margin\": \"0% 5%\"\n      },\n      children: chunk_image.map((image, index) => /*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          \"margin\": \"1% 1%\",\n          \"padding\": \"0.0%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ImageCard, {\n          src: \"C:\\\\Users\\\\srija\\\\Desktop\\\\ir_project\\\\GPR_dataset\\\\\" + image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, index1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageList, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n_c = ImageList;\nexport default ImageList;\nvar _c;\n$RefreshReg$(_c, \"ImageList\");","map":{"version":3,"names":["React","useState","ImageCard","Row","Col","axios","ImageContext","useEffect","jsxDEV","_jsxDEV","ImageList","_ref","_s","image","getImages","params","path","images","get","then","response","console","log","data","setImages","catch","error","slice","chunk_images","chunkSize","i","_images","length","chunk","push","children","map","chunk_image","index1","xs","style","index","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/srija/Desktop/ir_project/ir-frontend/src/components/ImageList.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport ImageCard from '../components/ImageCard';\r\nimport {Row, Col} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport { ImageContext } from './ImageModal';\r\nimport { useEffect } from 'react';\r\n\r\n \r\n\r\n\r\n\r\nfunction ImageList({image}){\r\n\r\n    const getImages=async(image)=>{\r\n        const params={\r\n            path: \"C:\\\\Users\\\\srija\\\\Desktop\\\\\"+image\r\n        }\r\n        let images\r\n        if(image==null){\r\n            await axios.get('http://127.0.0.1:5000/shuffle').then(response => {\r\n                console.log('Data received:', response.data);\r\n                setImages(response.data.images)\r\n                })\r\n                .catch(error => {\r\n                console.error('Error fetching data:', error);\r\n                });\r\n        }\r\n    \r\n    }\r\n\r\n    const [images, setImages]=useState([])\r\n\r\n    // this.getImages()\r\n    // console.log(\"hi\",this.state.images)\r\n    // var image=this.state.image\r\n    images=images.slice(0, 100)\r\n    let chunk_images=[]\r\n    let chunkSize=8\r\n    for (let i = 0; i < images?.length; i += chunkSize) {\r\n        const chunk = images.slice(i, i + chunkSize);\r\n        chunk_images.push(chunk)\r\n    }\r\n    console.log(chunk_images)\r\n\r\n    useEffect(()=>{\r\n        getImages(image)\r\n    },[image])\r\n\r\n    return(\r\n        <div>\r\n            {chunk_images.map((chunk_image, index1) => (\r\n                <Row xs=\"8\" key={index1} style={{\"padding\":\"0% 0%\", \"margin\":\"0% 5%\"}}>\r\n                {chunk_image.map((image, index )=> (\r\n                    <Col style={{\"margin\":\"1% 1%\", \"padding\":\"0.0%\"}}>\r\n                    <ImageCard src={\"C:\\\\Users\\\\srija\\\\Desktop\\\\ir_project\\\\GPR_dataset\\\\\"+image}></ImageCard>\r\n                    </Col>\r\n                ))}\r\n                </Row>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ImageList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}