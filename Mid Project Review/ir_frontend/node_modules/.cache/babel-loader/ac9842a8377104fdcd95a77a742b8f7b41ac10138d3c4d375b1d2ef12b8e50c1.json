{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srija\\\\Desktop\\\\ir_project\\\\ir-frontend\\\\src\\\\components\\\\ImageList.js\";\nimport React from 'react';\nimport ImageCard from '../components/ImageCard';\nimport { Row, Col } from 'reactstrap';\nimport axios from 'axios';\n\n// async getImages(){\n//     const params={\n//         path: \"C:\\\\Users\\\\srija\\\\Desktop\\\\\"+this.state.image\n//     }\n//     let images\n//     if(this.state.image==null){\n//         await axios.get('http://127.0.0.1:5000/shuffle').then(response => {\n//             console.log('Data received:', response.data);\n//             images=response.data.images\n//           })\n//           .catch(error => {\n//             console.error('Error fetching data:', error);\n//           });\n//     }\n//     this.setState({images: images})\n//     console.log(this.state)\n\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageList(_ref) {\n  let {\n    images\n  } = _ref;\n  // this.getImages()\n  // console.log(\"hi\",this.state.images)\n  // var image=this.state.image\n  var chunk_images = [];\n  var chunkSize = 8;\n  for (let i = 0; i < (images === null || images === void 0 ? void 0 : images.length); i += chunkSize) {\n    const chunk = images.slice(i, i + chunkSize);\n    chunk_images.push(chunk);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chunk_images.map((chunk_image, index1) => /*#__PURE__*/_jsxDEV(Row, {\n      xs: \"8\",\n      style: {\n        \"padding\": \"0% 0%\",\n        \"margin\": \"0% 5%\"\n      },\n      children: chunk_image.map((image, index) => /*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          \"margin\": \"1% 1%\",\n          \"padding\": \"0.0%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ImageCard, {\n          src: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this))\n    }, index1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n}\n_c = ImageList;\nexport default ImageList;\nvar _c;\n$RefreshReg$(_c, \"ImageList\");","map":{"version":3,"names":["React","ImageCard","Row","Col","axios","jsxDEV","_jsxDEV","ImageList","_ref","images","chunk_images","chunkSize","i","length","chunk","slice","push","children","map","chunk_image","index1","xs","style","image","index","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/srija/Desktop/ir_project/ir-frontend/src/components/ImageList.js"],"sourcesContent":["import React from 'react'\r\nimport ImageCard from '../components/ImageCard';\r\nimport {Row, Col} from 'reactstrap'\r\nimport axios from 'axios'\r\n\r\n // async getImages(){\r\n    //     const params={\r\n    //         path: \"C:\\\\Users\\\\srija\\\\Desktop\\\\\"+this.state.image\r\n    //     }\r\n    //     let images\r\n    //     if(this.state.image==null){\r\n    //         await axios.get('http://127.0.0.1:5000/shuffle').then(response => {\r\n    //             console.log('Data received:', response.data);\r\n    //             images=response.data.images\r\n    //           })\r\n    //           .catch(error => {\r\n    //             console.error('Error fetching data:', error);\r\n    //           });\r\n    //     }\r\n    //     this.setState({images: images})\r\n    //     console.log(this.state)\r\n\r\n    // }\r\n\r\nfunction ImageList({images}){\r\n\r\n        // this.getImages()\r\n        // console.log(\"hi\",this.state.images)\r\n        // var image=this.state.image\r\n        var chunk_images=[]\r\n        var chunkSize=8\r\n        for (let i = 0; i < images?.length; i += chunkSize) {\r\n            const chunk = images.slice(i, i + chunkSize);\r\n            chunk_images.push(chunk)\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {chunk_images.map((chunk_image, index1) => (\r\n                    <Row xs=\"8\" key={index1} style={{\"padding\":\"0% 0%\", \"margin\":\"0% 5%\"}}>\r\n                    {chunk_image.map((image, index )=> (\r\n                        <Col style={{\"margin\":\"1% 1%\", \"padding\":\"0.0%\"}}>\r\n                        <ImageCard src={image}></ImageCard>\r\n                        </Col>\r\n                    ))}\r\n                    </Row>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\nexport default ImageList"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAAQC,GAAG,EAAEC,GAAG,QAAO,YAAY;AACnC,OAAOC,KAAK,MAAM,OAAO;;AAExB;AACG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEJ,SAASC,SAASA,CAAAC,IAAA,EAAU;EAAA,IAAT;IAACC;EAAM,CAAC,GAAAD,IAAA;EAEnB;EACA;EACA;EACA,IAAIE,YAAY,GAAC,EAAE;EACnB,IAAIC,SAAS,GAAC,CAAC;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAGH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI,MAAM,GAAED,CAAC,IAAID,SAAS,EAAE;IAChD,MAAMG,KAAK,GAAGL,MAAM,CAACM,KAAK,CAACH,CAAC,EAAEA,CAAC,GAAGD,SAAS,CAAC;IAC5CD,YAAY,CAACM,IAAI,CAACF,KAAK,CAAC;EAC5B;EAEA,oBACIR,OAAA;IAAAW,QAAA,EACKP,YAAY,CAACQ,GAAG,CAAC,CAACC,WAAW,EAAEC,MAAM,kBAClCd,OAAA,CAACJ,GAAG;MAACmB,EAAE,EAAC,GAAG;MAAcC,KAAK,EAAE;QAAC,SAAS,EAAC,OAAO;QAAE,QAAQ,EAAC;MAAO,CAAE;MAAAL,QAAA,EACrEE,WAAW,CAACD,GAAG,CAAC,CAACK,KAAK,EAAEC,KAAK,kBAC1BlB,OAAA,CAACH,GAAG;QAACmB,KAAK,EAAE;UAAC,QAAQ,EAAC,OAAO;UAAE,SAAS,EAAC;QAAM,CAAE;QAAAL,QAAA,eACjDX,OAAA,CAACL,SAAS;UAACwB,GAAG,EAAEF;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAa;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEtC;IAAC,GALeT,MAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAO1B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd;AAACC,EAAA,GAzBIvB,SAAS;AA4BlB,eAAeA,SAAS;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}