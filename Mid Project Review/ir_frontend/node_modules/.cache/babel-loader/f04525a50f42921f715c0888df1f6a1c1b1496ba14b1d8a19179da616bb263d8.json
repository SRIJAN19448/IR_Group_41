{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srija\\\\Desktop\\\\ir_project\\\\ir-frontend\\\\src\\\\components\\\\ImageModal.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\nimport ImageList from './ImageList';\nimport useState from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageModal() {\n  _s();\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     modal: false,\n  //     filename: null\n  //   };\n\n  //   this.toggle = this.toggle.bind(this);\n  //   this.handleChange = this.handleChange.bind(this)\n  // }\n  const [modal, setModal] = useState(false);\n  const toggle = () => {\n    setModal(!modal);\n  };\n  const handleSubmit = () => {\n    console.log(inputValue); // use the input value here\n  };\n\n  // toggle() {\n  //   this.setState({\n  //     modal: !this.state.modal\n  //   });\n  //   // ImageList.setState({image: this.state.file})\n  // }\n\n  handleChange = e => {\n    let file = e.target.files[0];\n    console.log(file);\n    this.setState({\n      filename: file.name\n    });\n    console.log(this.state);\n  };\n\n  // render() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: this.toggle,\n      children: this.props.buttonLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      className: this.props.className,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: this.toggle,\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"file\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: toggle,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          color: \"danger\",\n          onClick: toggle,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n// }\n_s(ImageModal, \"FxRBWQPa/dKnwvdbY5qed8chvVc=\");\n_c = ImageModal;\nexport default ImageModal;\nvar _c;\n$RefreshReg$(_c, \"ImageModal\");","map":{"version":3,"names":["React","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","ImageList","useState","jsxDEV","_jsxDEV","ImageModal","_s","modal","setModal","toggle","handleSubmit","console","log","inputValue","handleChange","e","file","target","files","setState","filename","name","state","children","color","onClick","props","buttonLabel","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","className","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/srija/Desktop/ir_project/ir-frontend/src/components/ImageModal.js"],"sourcesContent":["import React from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\r\nimport ImageList from './ImageList';\r\nimport useState from 'react'\r\n\r\nfunction ImageModal(){\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     modal: false,\r\n  //     filename: null\r\n  //   };\r\n\r\n  //   this.toggle = this.toggle.bind(this);\r\n  //   this.handleChange = this.handleChange.bind(this)\r\n  // }\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  }\r\n  \r\n  const handleSubmit = () => {\r\n    console.log(inputValue); // use the input value here\r\n  }\r\n\r\n  // toggle() {\r\n  //   this.setState({\r\n  //     modal: !this.state.modal\r\n  //   });\r\n  //   // ImageList.setState({image: this.state.file})\r\n  // }\r\n\r\n  handleChange=(e)=>{\r\n    let file=e.target.files[0]\r\n    console.log(file)\r\n    this.setState({\r\n      filename: file.name\r\n    })\r\n    console.log(this.state)\r\n  }\r\n\r\n  // render() {\r\n    return (\r\n      <div>\r\n        <Button color=\"primary\" onClick={this.toggle}>{this.props.buttonLabel}</Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n          <ModalHeader toggle={this.toggle}>Upload Image</ModalHeader>\r\n          <ModalBody>\r\n            <Input type=\"file\" onChange={this.handleChange}></Input>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={toggle}>Upload</Button>{' '}\r\n            <Button color=\"danger\" onClick={toggle}>Cancel</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n// }\r\n\r\nexport default ImageModal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}